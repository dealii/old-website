
CREATE TABLE build_result (
    "time" timestamp with time zone DEFAULT CURRENT_TIMESTAMP(0),
    "log" text,
    "id" serial primary key,
    compiler text NOT NULL,
    system text NOT NULL,
    "version" text NOT NULL,
    success boolean DEFAULT false,
    lib_ok boolean DEFAULT false,
    tutorial_ok boolean DEFAULT false,
    doxygen_ok boolean DEFAULT false,
    tests_ok boolean DEFAULT false,
    enable_shared boolean DEFAULT false,
    enable_fparser boolean DEFAULT true,
    enable_multithreading boolean DEFAULT false,
    enable_reserved1 boolean DEFAULT false,
    enable_reserved2 boolean DEFAULT false,
    enable_reserved3 boolean DEFAULT false,
    lib_blas boolean DEFAULT false,
    lib_lapack boolean DEFAULT false,
    lib_umfpack text DEFAULT 'f'::text,
    lib_hsl text DEFAULT 'f'::text,
    lib_metis text DEFAULT 'f'::text,
    lib_petsc text DEFAULT 'f'::text,
    lib_mpi text DEFAULT 'f'::text,
    lib_reserved1 boolean DEFAULT false,
    lib_reserved2 boolean DEFAULT false,
    lib_reserved3 text DEFAULT 'f'::text,
    lib_reserved4 text DEFAULT 'f'::text,
    sender text NOT NULL,
    host text DEFAULT 'unknown'::text
) WITHOUT OIDS;

CREATE TABLE build_history_table (
    id integer REFERENCES build_result(id),
    success boolean DEFAULT false,
    lib_ok boolean DEFAULT false,
    tutorial_ok boolean DEFAULT false,
    doxygen_ok boolean DEFAULT false,
    tests_ok boolean DEFAULT false,
    sender text NOT NULL,
    host text DEFAULT 'unknown'::text,
    "time" timestamp with time zone DEFAULT CURRENT_TIMESTAMP(0)
) WITHOUT OIDS;

CREATE FUNCTION successtext (boolean, boolean, boolean, boolean, boolean)
	RETURNS text AS '
DECLARE
	success ALIAS FOR $1;
	lib_ok ALIAS FOR $2;
	tut_ok ALIAS FOR $3;
	dox_ok ALIAS FOR $4;
	tests  ALIAS FOR $5;
BEGIN
  IF success THEN
    return ''<img src="http://www.dealii.org/pictures/ok.gif" alt="Success">'';
  ELSIF tests THEN
    return ''<img src="http://www.dealii.org/pictures/ok.gif" alt="Success">'';
  ELSE
    return ''<img src="http://www.dealii.org/pictures/fail.gif" alt="Failure">'';
  END IF;
END;' LANGUAGE plpgsql;

CREATE FUNCTION truecross (boolean) RETURNS text AS'
BEGIN
  IF $1 THEN
    return ''<img src="http://www.dealii.org/pictures/ok.gif" alt="Success">'';
  ELSE
    return ''&nbsp;'';
  END IF;
END;' LANGUAGE plpgsql;

CREATE FUNCTION nofalse (text) RETURNS text AS'
BEGIN
  IF $1<>''f'' THEN
    return $1;
  ELSE
    return ''&nbsp;'';
  END IF;
END;' LANGUAGE plpgsql;

CREATE OR REPLACE VIEW build_now AS SELECT
	successtext(success, lib_ok, tutorial_ok, doxygen_ok, tests_ok) as success,
	compiler, system,
	version, truecross(enable_shared) AS enable_shared,
	truecross(enable_fparser) AS enable_fparser,
	truecross(enable_multithreading) AS enable_multithreading,
	truecross(lib_blas) AS lib_blas,
	truecross(lib_lapack) AS lib_lapack,
	nofalse(lib_metis) AS lib_metis,
	nofalse(lib_petsc) AS lib_petsc,
	nofalse(lib_umfpack) AS lib_umfpack,
	CURRENT_TIMESTAMP(0) - time as "age",
	id
	FROM build_result ORDER BY time DESC;

CREATE OR REPLACE VIEW build_history AS SELECT
	successtext(h.success, h.lib_ok, h.tutorial_ok, h.doxygen_ok, h.tests_ok) as success,
	h.time, h.sender, h.host, l.id
	from build_history_table as h, build_result as l
	WHERE h.id = l.id
	ORDER BY time DESC;

CREATE OR REPLACE VIEW log AS SELECT
	id, log from build_result;

grant select on build_now to public;
grant select on build_history to public;
grant select on log to public;
